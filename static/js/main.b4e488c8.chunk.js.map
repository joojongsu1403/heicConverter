{"version":3,"sources":["components/HeicDownloader.jsx","container/HeicDownloaderContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["HeicDownloader","onSubmit","onChange","onReset","setImgType","setQuality","fileNameList","setFileNameList","selectImage","e","array","i","target","files","length","data","name","push","imageDownloads","a","document","querySelector","value","ImgdownloadBlock","className","htmlFor","id","type","accept","multiple","map","index","quality","qualityName","onClick","list","createGlobalStyle","styled","div","HeicDownloaderContainer","useState","imgData","setImgData","imgType","preventDefault","fetch","ContentType","Accept","then","res","blob","heic2any","toType","conversionResult","url","URL","createObjectURL","link","createElement","href","setAttribute","body","appendChild","click","removeChild","catch","console","log","test","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4e488c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nconst HeicDownloader = ({\r\n  onSubmit,\r\n  onChange,\r\n  onReset,\r\n  setImgType,\r\n  setQuality,\r\n  fileNameList,\r\n  setFileNameList,\r\n}) => {\r\n  const imageTypeData = [\"jpeg\", \"png\", \"gif\"];\r\n  const imageQuality = [\r\n    {\r\n      quality: 3,\r\n      qualityName: \"상\",\r\n    },\r\n    {\r\n      quality: 2,\r\n      qualityName: \"중\",\r\n    },\r\n    {\r\n      quality: 1.5,\r\n      qualityName: \"하\",\r\n    },\r\n  ];\r\n\r\n  const selectImage = (e) => {\r\n    let array = [];\r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n      const data = e.target.files[i].name;\r\n      array.push(data);\r\n    }\r\n    setFileNameList(array);\r\n    onChange(e);\r\n  };\r\n\r\n  const imageDownloads = async (e) => {\r\n    await onSubmit(e);\r\n    const input = document.querySelector(\"#fileSelector\");\r\n    input.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <ImgdownloadBlock className=\"App\">\r\n      <div className=\"title\">\r\n        <h2>HEIC 이미지 확장자 변환 다운로더</h2>\r\n        <span>ver.1</span>\r\n      </div>\r\n      <form onSubmit={imageDownloads}>\r\n        <div className=\"fileSelectTitle\">\r\n          <div>이미지 선택</div>\r\n          <div>확장자 선택</div>\r\n          <div>해상도 선택</div>\r\n        </div>\r\n        <div className=\"fileTypeSelectWrapper\">\r\n          <label htmlFor=\"fileSelector\" className=\"fileSelectBtn\">\r\n            파일선택\r\n            <input\r\n              id=\"fileSelector\"\r\n              type=\"file\"\r\n              name=\"input_file\"\r\n              accept=\".heic\"\r\n              multiple\r\n              onChange={(e) => selectImage(e)}\r\n            />\r\n          </label>\r\n          <select onChange={(e) => setImgType(e.target.value)}>\r\n            {imageTypeData.map((data, index) => (\r\n              <option key={index} value={`image/${data}`}>\r\n                {data}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select onChange={(e) => setQuality(e.target.value)}>\r\n            {imageQuality.map((data, index) => (\r\n              <option key={index} value={data.quality}>\r\n                {data.qualityName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"submitBtnWrapper\">\r\n          <button type=\"submit\" className=\"submitBtn\">\r\n            저장\r\n          </button>\r\n          <button type=\"button\" onClick={onReset}>\r\n            선택파일 초기화\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"imgSelectList\">\r\n        <span>선택한 이미지 리스트</span>\r\n        <ul>\r\n          {fileNameList.length !== 0 ? (\r\n            <>\r\n              {fileNameList.map((list, index) => (\r\n                <li key={index}>\r\n                  <span>●</span> {list}\r\n                </li>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <li>\r\n              <span>●</span> 이미지가 없습니다.\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </ImgdownloadBlock>\r\n  );\r\n};\r\n\r\nexport default HeicDownloader;\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *{\r\n        box-sizing: inherit;\r\n        outline: none;\r\n        list-style: none;\r\n        text-decoration: none;\r\n        font-family: inherit;\r\n    }\r\n  \r\n`;\r\n\r\nconst ImgdownloadBlock = styled.div`\r\n  background-color: #5e8eb6;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  & > .title {\r\n    width: 1000px;\r\n    font-size: 23px;\r\n    color: #eee;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  & > form {\r\n    padding: 50px 0;\r\n    width: 1000px;\r\n    border-radius: 10px;\r\n    background-color: #eee;\r\n    box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.3);\r\n    & > .fileSelectTitle {\r\n      width: 800px;\r\n      height: 30px;\r\n      margin: 0 auto;\r\n      display: flex;\r\n      justify-content: space-around;\r\n      & > div {\r\n        width: 150px;\r\n        text-align: center;\r\n        font-weight: 600;\r\n        font-size: 20px;\r\n      }\r\n      & > div:nth-child(1) {\r\n        width: 200px;\r\n      }\r\n    }\r\n    & > .fileTypeSelectWrapper {\r\n      width: 800px;\r\n      height: 100px;\r\n      background-color: steelblue;\r\n      margin: 0 auto;\r\n      margin-top: 10px;\r\n      border-radius: 10px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-around;\r\n      & > .fileSelectBtn {\r\n        display: block;\r\n        width: 200px;\r\n        height: 50px;\r\n        background-color: #fff;\r\n        box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.3);\r\n        text-align: center;\r\n        line-height: 50px;\r\n        cursor: pointer;\r\n        font-size: 22px;\r\n        font-weight: 600;\r\n        & > input {\r\n          display: none;\r\n        }\r\n      }\r\n      & > select {\r\n        width: 150px;\r\n        height: 50px;\r\n        border: 0;\r\n        background-color: #fff;\r\n        padding-left: 10px;\r\n        font-size: 22px;\r\n        font-weight: 600;\r\n      }\r\n    }\r\n    & > .submitBtnWrapper {\r\n      width: 430px;\r\n      margin: 0 auto;\r\n      margin-top: 70px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      & > button {\r\n        display: block;\r\n        border: 0;\r\n        border-radius: 10px;\r\n        padding: 7px 50px;\r\n        font-size: 23px;\r\n        background-color: steelblue;\r\n        cursor: pointer;\r\n        color: #fff;\r\n        font-weight: 600;\r\n        box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.3);\r\n      }\r\n      & > button:hover {\r\n        color: #333;\r\n        background-color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  & > .imgSelectList {\r\n    width: 1000px;\r\n    height: 500px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 50px;\r\n\r\n    & > span {\r\n      width: 600px;\r\n      height: 40px;\r\n      line-height: 40px;\r\n      font-weight: 600;\r\n      font-size: 23px;\r\n      color: #eee;\r\n    }\r\n    & > ul {\r\n      flex: 1;\r\n      margin: 0;\r\n      margin: 15px;\r\n      padding: 0;\r\n      width: 600px;\r\n      list-style: none;\r\n      overflow: hidden;\r\n      overflow-y: scroll;\r\n      & > li {\r\n        width: 95%;\r\n        padding: 7px 0;\r\n        background-color: #eee;\r\n        border-radius: 10px;\r\n        font-size: 20px;\r\n        padding-left: 20px;\r\n        margin-bottom: 10px;\r\n        box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.3);\r\n        & > span {\r\n          margin-right: 10px;\r\n          color: #555;\r\n        }\r\n      }\r\n    }\r\n    /* & > ul::-webkit-scrollbar {\r\n      display: none;\r\n    } */\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport heic2any from \"heic2any\";\r\nimport HeicDownloader from \"../components/HeicDownloader\";\r\n\r\nconst HeicDownloaderContainer = () => {\r\n  const [imgData, setImgData] = useState([]);\r\n  const [imgType, setImgType] = useState(\"image/jpeg\");\r\n  const [quality, setQuality] = useState(3);\r\n  const [fileNameList, setFileNameList] = useState([]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    imgData.map((data) => {\r\n      fetch(data, {\r\n        ContentType: \"application/json\",\r\n        Accept: \"application/json\",\r\n      })\r\n        .then((res) => res.blob())\r\n        .then((blob) =>\r\n          heic2any({\r\n            blob,\r\n            toType: imgType,\r\n            quality: quality,\r\n          })\r\n        )\r\n        .then((conversionResult) => {\r\n          const url = URL.createObjectURL(conversionResult);\r\n\r\n          const link = document.createElement(\"a\");\r\n          link.href = url;\r\n          link.setAttribute(\"download\", `image.jpg`);\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n        })\r\n        .then(() => {\r\n          onReset();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n      return console.log(\"출력완료\");\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    let array = [];\r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n      const test = URL.createObjectURL(e.target.files[i]);\r\n      array.push(test);\r\n    }\r\n    setImgData(array);\r\n  };\r\n\r\n  const onReset = () => {\r\n    setImgData([]);\r\n    setFileNameList([]);\r\n  };\r\n\r\n  return (\r\n    <HeicDownloader\r\n      onSubmit={onSubmit}\r\n      onChange={onChange}\r\n      onReset={onReset}\r\n      setImgType={setImgType}\r\n      setQuality={setQuality}\r\n      fileNameList={fileNameList}\r\n      setFileNameList={setFileNameList}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HeicDownloaderContainer;\r\n","import React from 'react';\nimport HeicDownloaderContainer from './container/HeicDownloaderContainer';\n\nfunction App() {\n  return (\n    <HeicDownloaderContainer />\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}